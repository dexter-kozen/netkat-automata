#RANDOM CRAP.
#ASSAGE.
(x := 3; x = 3) == (x := 3)
(x = 3; y = 4) == (y = 4; x = 3)
(x := 3; y := 4) == (y := 4; x := 3)
(x := 1; y = 2) == (y = 2; x := 1)
(dup; x = 3) == (x = 3; dup)
(x = 3; x:= 3) == (x = 3)
(x := 3; x:=4 ) == (x := 4)
(x = 3; x = 4) == drop
(x = 3 + x != 3) == pass
(x != 3) <= x != 4
(x := 3; x :=4; x := 5) == x:=5
(x := 3; x :=4; x := 2; x := 5) == x:=5
(x := 3; x :=4; x := 2; x := 1; x := 5) == x:=5
(x := 3; x :=4; x := 2; x := 1; x := 0; x := 5) == x:=5
(x := 3; x :=4; x := 2; x := 1; x := 0; x := 6; x := 5) == x:=5
(x := 3; x :=4; x := 2; x := 1; x := 0; x := 6; x := 7; x := 5) == x:=5
(x := 3; y :=4; x := 2; y := 1; x := 0; y := 6; x := 7; x := 5) == x:=5; y := 6
(y := 1; x := 0; y := 6; x := 5) == x:=5; y := 6
x := 0; y := 6; x := 5 == x := 5; y := 6
z := 3; y := 6; x := 5 <= z := 4; x := 5 y := 6
(x = 3 + z = 4) + drop == (x = 3 + z = 4)
(x = 3 + z = 4) + (x = 3 + z = 4) == (x = 3 + z = 4)
pass; (x = 3 + z = 4) == (x = 3 + z = 4)
(x = 3 + z = 4); pass == (x = 3 + z = 4)
(y = 2);(x = 3 + z = 4) == (y = 2);(x = 3) + (y = 2);(z = 4)
(x = 3 + z = 4);(y = 2) == (x = 3);(y = 2) + (z = 4);(y = 2)
x = 3 <= x = 4
drop; (x = 3 + z = 4) == drop
(x = 3 + z = 4); drop == drop
pass + (x = 3 + z = 4); (x = 3 + z = 4)* == (x = 3 + z = 4)*
# this is a trolltastic test.  it's true because both sides are equivalent
# to the sum of all tests.
(z = 5) + ((x = 3 + z = 4); (x = 3 + z = 4)*) == z = 5 + (x = 3 + z = 4)*
#BOOLEAN ALGEBRA TIME!
(x = 4) + ~(x = 4) == pass
(x = 4); ~(x = 4) == drop
#DUP-TACULAR!
dup; x = 5 == x = 5; dup

#PACKET ALGEBRA
x := 4; x = 4 == x:= 4
x = 4; x := 4 == x = 4
x = 3; x = 5 == drop

#from the other project
( switch = 0; (switch := 1))* <= drop

(x := 4; x:= 3; x = 3)* == pass + x := 3

(x := 4; x:= 3; x = 3) <= pass + x := 3

(x := 4; x:= 3; x = 3) ==  x := 3


#simple hops through the network

sw = 0; sw := 1; dup; sw = 1; sw := 2; dup  ==  sw = 0; sw := 1; dup; sw := 2; dup

sw = 0; sw := 1; dup; sw = 1 == sw = 0; sw := 1; dup

